{% extends "finance/components/overview_form.html.j2" %}
{% block title %}Finance-Transaction{% endblock %}
{% block card_title %}New Transaction{% endblock %}
{% block input_form %}
    <form method="POST" action="{{ url_for("finance.render_finance_page") }}">
    {{ form.hidden_tag() }}
    {{ form.id() }}
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="type" class="form-label">Transaction Type</label>
                    {{ form.type(class="form-select", id="type") }}
                    {% if form.type.errors %}
                        <div class="text-danger">
                            {% for error in form.type.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="amount" class="form-label">Amount</label>
                    {{ form.amount(class="form-control", id="amount", type="number", step="0.01") }}
                    {% if form.amount.errors %}
                        <div class="text-danger">
                            {% for error in form.amount.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="account_id" class="form-label">Account</label>
                    {{ form.account_id(class="form-select", id="account_id") }}
                    {% if form.account_id.errors %}
                        <div class="text-danger">
                            {% for error in form.account_id.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="category_id" class="form-label">Category</label>
                    <select class="form-select"
                            id="category_id"
                            name="{{ form.category_id.name }}">
                        {% for val, label in form.category_id.choices %}
                            {% set category = categories_dict[val] %}
                            <option value="{{ val }}"
                                    data-type="{{ category.type }}"
                                    {% if form.category_id.data == val %}selected{% endif %}>{{ label }}</option>
                        {% endfor %}
                    </select>
                    {% if form.category_id.errors %}
                        <div class="text-danger">
                            {% for error in form.category_id.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="date" class="form-label">Date and Time</label>
                    {{ form.date(class="form-control", id="date", type="datetime-local", value=form.date.default) }}
                    {% if form.date.errors %}
                        <div class="text-danger">
                            {% for error in form.date.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="title" class="form-label">Title</label>
                    {{ form.title(class="form-control", id="title") }}
                    {% if form.title.errors %}
                        <div class="text-danger">
                            {% for error in form.title.errors %}<small>{{ error }}</small>{% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="form-group mb-3">
            <label for="note" class="form-label">Notes</label>
            {{ form.note(class="form-control", id="note", rows=3) }}
            {% if form.note.errors %}
                <div class="text-danger">
                    {% for error in form.note.errors %}<small>{{ error }}</small>{% endfor %}
                </div>
            {% endif %}
        </div>
        <div class="form-group">{{ form.submit(class="btn btn-primary") }}</div>
    </form>
{% endblock %}
{% block graph_view %}{{ render_finance_chart('transactionChart', 'Transaction Overview') }}{% endblock %}
{% block listed_items %}
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Type</th>
                            <th>Title</th>
                            <th>Account</th>
                            <th>Category</th>
                            <th>Amount</th>
                            <th>Note</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for transaction in transactions %}
                            <tr>
                                <td>{{ transaction.date.strftime('%Y-%m-%d %H:%M') }}</td>
                                <td>{{ transaction.type }}</td>
                                <td>{{ transaction.title }}</td>
                                <td>{{ accounts_dict[transaction.account_id].name }}</td>
                                <td>{{ categories_dict[transaction.category_id].name }}</td>
                                <td>{{ "%.2f"|format(transaction.amount) }}</td>
                                <td>{{ transaction.note }}</td>
                                <td>
                                    <button class="btn btn-sm btn-primary edit-transaction"
                                            data-transaction='{{ transaction.to_dict() |tojson }}'>
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-danger delete-transaction"
                                            data-id="{{ transaction.id }}">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}
{% block scripts %}
    {{ super() }}
    {{ render_finance_chart_js('transactionChart', chart_data) }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const submitBtn = form.querySelector('input[type="submit"]');
    const originalBtnText = submitBtn.value;
    const cancelBtn = form.querySelector('.cancel-edit') || 
                    document.createElement('button');
    
    if (!form.querySelector('.cancel-edit')) {
        cancelBtn.type = 'button';
        cancelBtn.className = 'btn btn-secondary cancel-edit ms-2';
        cancelBtn.style.display = 'none';
        cancelBtn.textContent = 'Cancel';
        submitBtn.parentNode.appendChild(cancelBtn);
    }

    function resetForm() {
        form.reset();
        form.id.value = '';
        submitBtn.value = originalBtnText;
        cancelBtn.style.display = 'none';
    }

    // Edit button handler
    document.querySelectorAll('.edit-transaction').forEach(button => {
        button.addEventListener('click', function() {
            const transaction = JSON.parse(this.dataset.transaction);
            
            // Add hidden ID field if it doesn't exist
            let idField = form.querySelector('input[name="id"]');
            if (!idField) {
                idField = document.createElement('input');
                idField.type = 'hidden';
                idField.name = 'id';
                form.appendChild(idField);
            }
            
            // Set form values
            idField.value = transaction.id;
            form.type.value = transaction.type;
            form.account_id.value = transaction.account_id;
            form.category_id.value = transaction.category_id;
            form.amount.value = transaction.amount;
            form.date.value = transaction.date_obj;
            form.title.value = transaction.title || '';
            form.note.value = transaction.note || '';
            
            // Update UI
            submitBtn.value = 'Save Changes';
            cancelBtn.style.display = 'inline-block';
            
            form.scrollIntoView({ behavior: 'smooth' });
        });
    });

    // Delete button handler
    document.querySelectorAll('.delete-transaction').forEach(button => {
        button.addEventListener('click', async function() {
            if (confirm('Are you sure you want to delete this transaction?')) {
                const response = await fetch(`/finance/transactions/${this.dataset.id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Error deleting transaction');
                }
            }
        });
    });

    // Cancel button handler
    cancelBtn.addEventListener('click', resetForm);
    
    // Reset form handler
    form.addEventListener('reset', resetForm);
});
    </script>
{% endblock %}
