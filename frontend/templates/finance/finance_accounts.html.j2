{% extends "finance/components/overview_form.html.j2" %}
{% block title
    %}
    Finance-Accounts
{% endblock %}
{% block card_title %}
    Finance Accounts{%
    endblock %}
    {% block input_form %}
        <form method="POST"
              action="{{ url_for("finance.render_finance_accounts_page") }}">
            {{ form.hidden_tag() }}
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="name" class="form-label">Account Name</label>
                        {{ form.name(class="form-control", id="name") }}
                        {% if form.name.errors
                            %}
                            <div class="text-danger">
                                {% for error in form.name.errors %}<small>{{ error }}</small>{% endfor %}
                            </div>
                        {% endif %}
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="type" class="form-label">Account Type</label>
                        {{ form.type(class="form-select", id="type") }}
                        {% if form.type.errors
                            %}
                            <div class="text-danger">
                                {% for error in form.type.errors %}<small>{{ error }}</small>{% endfor %}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="balance" class="form-label">Balance</label>
                        {{ form.balance(class="form-control", id="balance", type="number",
                                                step="0.01") }}
                        {% if form.balance.errors %}
                            <div class="text-danger">
                                {% for error in form.balance.errors %}<small>{{ error }}</small>{% endfor %}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
            <div class="form-group mb-3">
                <label for="note" class="form-label">Notes</label>
                {{ form.note(class="form-control", id="note", rows=3) }}
                {% if
                    form.note.errors %}
                    <div class="text-danger">
                        {% for error in form.note.errors %}<small>{{ error }}</small>{% endfor %}
                    </div>
                {% endif %}
            </div>
            <div class="form-group">
                {{ form.submit(class="btn btn-primary") }}
                <button type="button"
                        class="btn btn-secondary cancel-edit ms-2"
                        style="display: none">Cancel</button>
            </div>
        </form>

        
    {% endblock %}
    {% block graph_view %}
        {{ render_finance_chart('accountChart',
                'Account Overview') }}
    {% endblock %}
    {% block listed_items %}
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Balance</th>
                                <th>Note</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for account in accounts %}
                                <tr>
                                    <td>{{ account.name }}</td>
                                    <td>{{ account.type }}</td>
                                    <td>{{ "%.2f"|format(account.balance) }}</td>
                                    <td>{{ account.note }}</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary edit-account"
                                                data-account='{{ account.to_dict() |tojson }}'>
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-danger delete-account"
                                                data-id="{{ account.id }}">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    {% endblock %}
    {% block scripts %}
        {{ super() }}
        {{ render_finance_chart_js('accountChart', chart_data) }}
        <script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const submitBtn = form.querySelector('input[type="submit"]');
    const originalBtnText = submitBtn.value;

    // Edit button handler
    document.querySelectorAll('.edit-account').forEach(button => {
        button.addEventListener('click', function() {
            const account = JSON.parse(this.dataset.account);
            
            // Fill form with account data
            form.id.value = account.id;
            form.name.value = account.name;
            form.type.value = account.type;
            form.note.value = account.note;
            
            // Change submit button text
            submitBtn.value = 'Save Changes';
            
            // Scroll to form
            form.scrollIntoView({ behavior: 'smooth' });
        });
    });

    // Delete button handler
    document.querySelectorAll('.delete-account').forEach(button => {
        button.addEventListener('click', async function() {
            if (confirm('Are you sure you want to delete this account?')) {
                const response = await fetch(`/finance/accounts/${this.dataset.id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Error deleting account');
                }
            }
        });
    });

    const cancelBtn = form.querySelector('.cancel-edit');
    function resetForm() {
        form.reset();
        form.id.value = '';
        submitBtn.value = originalBtnText;
        cancelBtn.style.display = 'none';
    }

    // Edit button handler
    document.querySelectorAll('.edit-account').forEach(button => {
        button.addEventListener('click', function() {
            const account = JSON.parse(this.dataset.account);
            
            // Fill form with account data
            form.id.value = account.id;
            form.name.value = account.name;
            form.type.value = account.type;
            form.note.value = account.note;
            form.balance.value = account.balance;
            
            // Change submit button text and show cancel button
            submitBtn.value = 'Save Changes';
            cancelBtn.style.display = 'inline-block';
            
            // Scroll to form
            form.scrollIntoView({ behavior: 'smooth' });
        });
    });

    // Cancel button handler
    cancelBtn.addEventListener('click', resetForm);

    // Reset form handler - update to use the new resetForm function
    form.addEventListener('reset', resetForm);
});
        </script>
    {% endblock %}
